{"version":3,"sources":["Contexts/AllPlayersContext.tsx","Util/StatCategories.ts","Util/Util.ts","Contexts/LeagueContext.tsx","Contexts/SettingsContext.tsx","components/AddTeamButton/AddTeamButton.tsx","components/Team/TeamLabel.tsx","SharedStyles/SharedStyles.ts","components/Team/RosterTable.styles.ts","components/Team/PlayerSelect.tsx","components/Team/UndraftedRow.tsx","components/Team/StatsTable.styles.ts","components/Team/Team.styles.ts","components/Team/RosterTable.tsx","components/Team/StatsTable.tsx","components/Team/Team.tsx","components/AllTeamsContainer/AllTeamsContainer.tsx","App.styles.ts","components/SettingsButton/SettingsPanel.tsx","components/SettingsButton/SettingsPanel.styles.ts","components/SettingsButton/SettingsButton.tsx","components/MultiplierButton/MultiplierPanel.tsx","components/MultiplierButton/MultiplierButton.tsx","components/Visualizations/BarChart/BarChart.styles.ts","components/Visualizations/BarChart/StackedBarChart.tsx","components/Visualizations/Visualizations.tsx","components/SeasonSelect/SeasonSelect.style.ts","components/SeasonSelect/SeasonSelect.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["allPlayersContext","React","createContext","AllPlayersContextProvider","props","useState","allPlayers","setAllPlayers","Provider","value","children","invertedCategories","excludedCategories","defaultCategories","allStatCategories","filter","category","index","array","indexOf","includes","defaultStatMultipliers","ppg","rpg","apg","topg","bpg","spg","fgmpg","tpmpg","fgapg","ftapg","ftmpg","mpg","tpp","ftp","fgp","assists","blocks","steals","turnovers","offReb","defReb","totReb","fgm","fga","tpm","tpa","ftm","fta","pFouls","points","gamesPlayed","gamesStarted","plusMinus","min","dd2","td3","tpapg","pfpg","fullStatNameDictionary","scl","fppg","nbaRed","nbaBlue","generateEmptyStats","result","forEach","getAllPlayers","a","year","Date","getFullYear","fetch","playerListResponse","json","playerList","league","standard","getPlayerStats","personId","currentYear","playerStatsResponse","ok","playerStatsJson","console","log","stats","regularSeason","season","total","getSeasonStats","player","selectedYear","selectedStats","find","seasonYear","calcTeamStats","roster","length","map","reduce","acc","cur","calcFantasyPoints","statMultipliers","calcLeagueStats","teamList","median","max","Math","team","calcMedian","arr","sort","b","calcMean","isBestInCategory","best","convertStatStringsToNumbers","input","JSON","parse","stringify","latest","stat","parseFloat","addCalculatedStats","leagueContext","LeagueContextProvider","initialTeamList","id","color","initialLeagueStats","initialLeague","setLeague","addTeam","nextTeamList","nextStats","removeTeam","updateTeam","findIndex","settingsContext","SettingsContextProvider","defaultSelectedStats","setSelectedStats","setSelectedYear","setStatMultipliers","useEffect","response","AddTeamButton","useContext","IconButton","onClick","style","TeamLabel","thisTeam","defaultDisplayName","name","isEditingName","setIsEditingName","displayName","setDisplayName","isEditingColor","setIsEditingColor","nameEditorRef","useRef","handleChange","target","handleKeyDown","key","current","blur","handleBlur","trim","select","className","ClickAwayListener","onClickAway","Tooltip","title","onChangeComplete","hex","open","disableFocusListener","disableHoverListener","disableTouchListener","interactive","RadioButtonUncheckedRounded","backgroundColor","fill","borderRadius","margin","cursor","height","width","TextField","size","autoFocus","onBlur","onChange","onKeyDown","inputProps","ref","getScrollBarStyles","selector","scrollBarWidth","overflowY","useRosterTableStyles","makeStyles","root","opacity","teamColor","lineHeight","overflow","textOverflow","paddingLeft","whiteSpace","usePopoverStyles","popper","padding","borderColor","PlayerSelect","teamId","addPlayer","searchString","setSearchString","searchResults","setSearchResults","selectedIndex","setSelectedIndex","rosterIds","resultsContainerRef","lazyLoadHeight","firstName","lastName","isActive","isMatching","handleClick","currentTarget","dataset","searchStringLower","toLowerCase","firstNameLower","lastNameLower","startsWith","type","variant","label","event","stopPropagation","scrollTop","focused","List","disablePadding","i","offsetTop","ListItem","button","data-person-id","selected","disabled","UndraftedRow","openTooltip","setOpenTooltip","popoverClasses","playerSelect","TableRow","TableCell","classes","useStatsTableStyles","textTransform","textAlign","paddingRight","useTooltipStyles","tooltip","paddingTop","maxHeight","boxShadow","position","top","fontSize","border","useAccordionStyles","maxWidth","paddingBottom","minWidth","useAccordionSummaryStyles","minHeight","content","justifyContent","flexGrow","display","useAccordionDetailStyles","flexDirection","useGridStyles","flexWrap","alignItems","useTableContainerStyles","overflowX","RosterTable","removePlayer","handleTooltipClose","handleTooltipOpen","parseInt","tableContainerClasses","rosterTableClasses","tooltipClasses","document","querySelectorAll","nameCell","scrollWidth","clientWidth","fullName","innerHTML","split","join","toString","UndraftedRows","rows","push","TableContainer","Table","TableBody","playerSeasonStats","playerStatsArray","Object","entries","Avatar","src","toFixed","arrow","data-index","StatsTable","leagueStats","selectedTeamStats","statsTableClasses","placement","verticalAlign","Team","isExpanded","setIsExpanded","accordionClasses","accordionSummaryClasses","accordionDetailClasses","gridClasses","values","statStringObj","Accordion","expanded","AccordionSummary","alert","AccordionDetails","Grid","container","direction","AllTeamsContainer","teamProps","useAppGridStyles","SettingsPanel","settingsArray","show","dense","data-value","disableGutters","ListItemText","primary","Checkbox","checked","useSettingsPanelStyles","SettingsButton","settingsClasses","setIsOpen","MultiplierPanel","statMultiplierArray","multiplier","nextMultipliers","Button","InputProps","startAdornment","InputAdornment","marginLeft","MultiplierButton","useBarChartStyles","chartCardPadding","chartCardMargin","marginTop","marginRight","marginBottom","outline","StackedBarChart","statCategory","barChartClasses","barChartCard","querySelector","svgHeight","clientHeight","svgVerticalMargin","svgWidth","svgHorizontalMargin","barHeight","xScale","d3","domain","range","xAxis","tickSizeOuter","yScale","yAxis","tickSizeInner","barWidths","selectedSeasonStats","individualBars","statValue","xPos","idx","barWidth","teamTotal","svg","attr","selectAll","data","enter","append","d","text","classed","call","html","Card","Visualizations","showStatsArray","keys","useSeasonSelectStyles","SeasonSelect","seasonSelectClasses","FormControl","InputLabel","Select","autoWidth","MenuItem","App","appGridClasses","spacer","item","md","justify","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.84091f97.chunk.js","sourcesContent":["import React, {\r\n\tuseState,\r\n\tuseEffect,\r\n\tDispatch,\r\n\tSetStateAction\r\n} from 'react';\r\nimport { getAllPlayers } from '../Util/Util';\r\nimport { IPlayerSearchResult } from '../Types/types';\r\n\r\nconst allPlayersContext = React.createContext({} as IAllPlayersContext);\r\n\r\ninterface ContextProviderProps {\r\n  children: React.ReactNode\r\n}\r\n\r\ninterface IAllPlayersContext {\r\n\tallPlayers: Array<IPlayerSearchResult>;\r\n\tsetAllPlayers: Dispatch<SetStateAction<Array<IPlayerSearchResult>>>\r\n}\r\n\r\nconst AllPlayersContextProvider = (props: ContextProviderProps): JSX.Element => {\r\n\r\n\tconst [allPlayers, setAllPlayers] = useState([] as Array<IPlayerSearchResult>);\r\n\r\n\r\n\treturn (\r\n\t\t<allPlayersContext.Provider value={{allPlayers,  setAllPlayers}}>\r\n\t\t\t{props.children}\r\n\t\t</allPlayersContext.Provider>\r\n\t)\r\n}\r\n\r\nexport {AllPlayersContextProvider, allPlayersContext}","import { IStatDictionary } from '../Types/types';\r\n\r\n// stat categories provided by data.nba.net\r\nexport const providedCategories: Array<string> = [\r\n\t'ppg',\r\n\t'rpg',\r\n\t'apg', \r\n\t'mpg', \r\n\t'topg', \r\n\t'spg', \r\n\t'bpg',\r\n\t'tpp', \r\n\t'ftp', \r\n\t'fgp', \r\n\t'assists',\r\n\t'blocks',\r\n\t'steals',\r\n\t'turnovers',\r\n\t'offReb',\r\n\t'defReb',\r\n\t'totReb',\r\n\t'fgm',\r\n\t'fga',\r\n\t'tpm',\r\n\t'tpa',\r\n\t'ftm',\r\n\t'fta',\r\n\t'pFouls',\r\n\t'points',\r\n\t'gamesPlayed',\r\n\t'gamesStarted',\r\n\t'plusMinus',\r\n\t'min',\r\n\t'dd2',\r\n\t'td3',\r\n\t'seasonYear',\r\n\t'seasonStageId'\r\n];\r\n\r\n// categories not provided by data.nba.net\r\nexport const calculatedCategories = [\r\n\t'fgmpg',\r\n\t'fgapg',\r\n\t'tpmpg',\r\n\t'tpapg',\r\n\t'ftmpg',\r\n\t'ftapg',\r\n\t'pfpg',\r\n\t// 'scl' /** team stat only */\r\n\t'fppg'\r\n];\r\n\r\nexport const percentageCategories = [\r\n\t'tpp',\r\n\t'ftp',\r\n\t'fgp'\r\n];\r\n\r\nexport const invertedCategories = [\r\n\t'topg',\r\n\t'turnovers',\r\n\t'pFouls',\r\n\t'pfpg',\r\n\t'fga',\r\n\t'tpa',\r\n\t'fta',\r\n\t'fgapg',\r\n\t'tpapg',\r\n\t'ftapg',\r\n];\r\n\r\nexport const excludedCategories = [\r\n\t'seasonStageId',\r\n\t'seasonYear',\r\n];\r\n\r\nexport const defaultCategories = [\r\n\t'fppg',\r\n\t// 'scl',\r\n\t'ppg',\r\n\t'rpg',\r\n\t'apg',\r\n\t'topg',\r\n\t'bpg',\r\n\t'spg',\r\n\t'fgmpg',\r\n\t'tpmpg',\r\n\t'ftmpg'\r\n];\r\n\r\n\r\nexport const allStatCategories = [...defaultCategories, ...providedCategories,...calculatedCategories]\r\n/** remove duplicates and excluded categories */\r\n.filter((category, index, array) => array.indexOf(category) === index && !excludedCategories.includes(category));\r\n\r\nexport const defaultStatMultipliers: IStatDictionary = {\r\n\tppg: 1,\r\n\trpg: 1,\r\n\tapg: 2,\r\n\ttopg: -2,\r\n\tbpg: 4,\r\n\tspg: 4,\r\n\tfgmpg: 2,\r\n\ttpmpg: 1,\r\n\tfgapg: -1,\r\n\tftapg: -1,\r\n\tftmpg: 1,\r\n\tmpg: 0, \r\n\ttpp: 0,\r\n\tftp: 0,\r\n\tfgp: 0,\r\n\tassists: 0,\r\n\tblocks: 0,\r\n\tsteals: 0,\r\n\tturnovers: 0,\r\n\toffReb: 0,\r\n\tdefReb: 0,\r\n\ttotReb: 0,\r\n\tfgm: 0,\r\n\tfga: 0,\r\n\ttpm: 0,\r\n\ttpa: 0,\r\n\tftm: 0,\r\n\tfta: 0,\r\n\tpFouls: 0,\r\n\tpoints: 0,\r\n\tgamesPlayed: 0,\r\n\tgamesStarted: 0,\r\n\tplusMinus: 0,\r\n\tmin: 0,\r\n\tdd2: 0,\r\n\ttd3: 0,\r\n\ttpapg: 0,\r\n\tpfpg: 0\r\n}\r\n\r\nexport const fullStatNameDictionary: { [key: string]: string } = {\r\n\tppg: 'points per game',\r\n\trpg: 'rebounds per game',\r\n\tapg: 'assists per game',\r\n\tmpg: 'minutes per game',\r\n\ttopg: 'turnovers per game',\r\n\tspg: 'steals per game',\r\n\tbpg: 'blocks per game',\r\n\ttpp: 'three point percentage',\r\n\tftp: 'free throw percentage',\r\n\tfgp: 'field goal percentage',\r\n\toffReb: 'offensive rebounds',\r\n\tdefReb: 'defensive rebounds',\r\n\ttotReb: 'total rebounds',\r\n\tfgm: 'field goals made',\r\n\tfga: 'field goals attempted',\r\n\ttpm: 'three points made',\r\n\ttpa: 'three points attempted',\r\n\tftm: 'free throws made',\r\n\tfta: 'free throws attempted',\r\n\tpFouls: 'personal fouls',\r\n\tmin: 'minutes',\r\n\tdd2: 'double doubles',\r\n\ttd3: 'triple doubles',\r\n\tfgmpg: 'field goals made per game',\r\n\tfgapg: 'field goals attempted per game',\r\n\ttpmpg: 'three points made per game',\r\n\ttpapg: 'three points attempted per game',\r\n\tftmpg: 'free throws made per game',\r\n\tftapg: 'free throws attempted per game',\r\n\tpfpg: 'personal fouls per game',\r\n\tscl: 'stat category leads',\r\n\tfppg: 'fantasy points per game'\r\n}","import {\r\n\tinvertedCategories,\r\n\tallStatCategories\r\n} from './StatCategories';\r\n\r\nimport {\r\n\tIStatDictionary,\r\n\tILeagueStats,\r\n\tITeam,\r\n\tIPlayerSearchResult,\r\n\tIStatSearchResult,\r\n\tPlayer\r\n} from '../Types/types';\r\n\r\nexport const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n\r\nexport const maxTeamSize = 15;\r\n\r\nexport const nbaRed = '#c8102e';\r\nexport const nbaBlue = '#1d428a';\r\n\r\nexport const generateEmptyStats = (): IStatDictionary => {\r\n\tconst result: IStatDictionary = {};\r\n\tallStatCategories.forEach(category => result[category] = 0);\r\n\treturn result;\r\n}\r\n\r\nexport const getAllPlayers = async (year: number = (new Date()).getFullYear()): Promise<Array<IPlayerSearchResult>> => {\r\n\tlet playerListResponse = await fetch(`https://data.nba.net/prod/v1/${year}/players.json`);\r\n\tlet playerList = await playerListResponse.json();\r\n\treturn playerList.league?.standard;\r\n}\r\n\r\nexport const getPlayerStats = async (personId: string): Promise<IStatSearchResult | any> => {\r\n\tlet currentYear = (new Date()).getFullYear();\r\n\tlet playerStatsResponse;\r\n\r\n\twhile (!playerStatsResponse || !playerStatsResponse.ok) {\r\n\t\tplayerStatsResponse = await fetch(`https://data.nba.net/prod/v1/${currentYear}/players/${personId}_profile.json`)\r\n\t\tif (!playerStatsResponse.ok) {\r\n\t\t\tcurrentYear--;\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst playerStatsJson = await playerStatsResponse.json();\r\n\tconsole.log(playerStatsJson.league.standard)\r\n\treturn playerStatsJson.league.standard ??\r\n\t{\r\n\t\tstats: {\r\n\t\t\tregularSeason: {\r\n\t\t\t\tseason: [{\r\n\t\t\t\t\ttotal: generateEmptyStats()\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const getSeasonStats = (player: Player, selectedYear: number | Promise<number>): IStatDictionary => {\r\n\tconst selectedStats = player.stats.regularSeason.season\r\n\t\t.find((season) => season.seasonYear === selectedYear)?.total;\r\n\treturn selectedStats ?? generateEmptyStats();\r\n}\r\n\r\nexport const calcTeamStats = (roster: Array<Player>, selectedYear: number | Promise<number>): IStatDictionary => {\r\n\tif (!roster.length) { return generateEmptyStats() };\r\n\tconst result: IStatDictionary = {};\r\n\tallStatCategories.forEach(category => {\r\n\t\tresult[category] = roster\r\n\t\t\t.map(player => getSeasonStats(player, selectedYear)[category])\r\n\t\t\t.reduce((acc, cur) => acc + cur);\r\n\t});\r\n\treturn result;\r\n}\r\n\r\nexport const calcFantasyPoints = (stats: IStatDictionary, statMultipliers: IStatDictionary) => {\r\n\tlet result = 0;\r\n\tfor (const category in stats) {\r\n\t\tif (category === 'fppg') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tresult += stats[category] * statMultipliers[category];\r\n\t\t}\r\n\t}\r\n\tstats.fppg = result;\r\n}\r\n\r\nexport const calcLeagueStats = (teamList: Array<ITeam>): ILeagueStats => {\r\n\tconst result: ILeagueStats = {\r\n\t\tmin: {},\r\n\t\tmedian: {},\r\n\t\tmax: {}\r\n\t};\r\n\r\n\tallStatCategories.forEach(category => {\r\n\t\tresult.min[category] = Math.min(...teamList.map(team => team.stats[category]));\r\n\t\tresult.median[category] = calcMedian(teamList.map(team => team.stats[category]));\r\n\t\tresult.max[category] = Math.max(...teamList.map(team => team.stats[category]));\r\n\t})\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const calcMedian = (arr: Array<number>): number => {\r\n\tarr.sort((a, b) => a - b);\r\n\treturn (\r\n\t\tarr.length % 2 ?\r\n\t\tarr[(arr.length - 1) / 2] :\r\n\t\tcalcMean([arr[arr.length / 2], arr[(arr.length / 2) - 1]])\r\n\t);\r\n}\r\n\r\nexport const calcMean = (arr: Array<number>): number => {\r\n  return arr.reduce((acc, cur) => acc + cur) / arr.length ;\r\n}\r\n\r\nexport const isBestInCategory = (value: number, category: string, best: ILeagueStats): boolean => {\r\n\tif (value === 0 && !invertedCategories.includes(category)) {\r\n\t\treturn false\r\n\t}\r\n\telse if (invertedCategories.includes(category)) {\r\n\t\treturn value === best.min[category];\r\n\t} else {\r\n\t\treturn value === best.max[category];\r\n\t}\r\n}\r\n\r\n/**\r\n * For whatever reason, data.nba.net provides statistics as strings instead of numbers.\r\n * This function takes a player's stat object, and returns a new object with all\r\n * strings converted into numbers. \r\n */ \r\nexport const convertStatStringsToNumbers = (input: any): any => {\r\n\tconst result = JSON.parse(JSON.stringify(input));\r\n\tconst { latest, regularSeason } = result;\r\n\tconst { season } = regularSeason;\r\n\r\n\tfor (const stat in latest) {\r\n\t\tif (typeof latest[stat] === 'string') {\r\n\t\t\tlatest[stat] = latest[stat] !== '-1' ? parseFloat(latest[stat]) : 0\r\n\t\t} \r\n\t}\r\n\t\r\n\tfor (const year in season) {\r\n\t\tfor (const category in season[year].total) {\r\n\t\t\tconst stat = season[year].total[category];\r\n\t\t\tif (typeof stat === 'string') {\r\n\t\t\t\tseason[year].total[category] = stat !== '-1' ? parseFloat(stat) : 0\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const addCalculatedStats = (input: IStatDictionary): IStatDictionary => {\r\n\t\r\n\treturn { \r\n\t\t...input,\r\n\t\tfgmpg: input.fgm / input.gamesPlayed,\r\n\t\tfgapg: input.fga / input.gamesPlayed,\r\n\t\ttpmpg: input.tpm / input.gamesPlayed,\r\n\t\ttpapg: input.tpa / input.gamesPlayed,\r\n\t\tftmpg: input.ftm / input.gamesPlayed,\r\n\t\tftapg: input.fta / input.gamesPlayed,\r\n\t\tpfpg: input.pFouls / input.gamesPlayed\r\n\t};\r\n}","import React, { useState } from 'react';\r\nimport { ILeagueStats, ILeague, ITeam } from '../Types/types';\r\nimport { calcLeagueStats, generateEmptyStats } from '../Util/Util';\r\nimport { allStatCategories } from '../Util/StatCategories';\r\n\r\nconst leagueContext = React.createContext({} as ILeagueContext);\r\n\r\ninterface ContextProviderProps {\r\n  children: React.ReactNode\r\n}\r\n\r\ninterface ILeagueContext {\r\n\taddTeam: () => void;\r\n\tupdateTeam: (team: ITeam) => void;\r\n\tremoveTeam: (id: number) => void;\r\n\tleague: ILeague;\r\n\tsetLeague: React.Dispatch<React.SetStateAction<ILeague>>;\r\n}\r\n\r\nconst LeagueContextProvider = (props: ContextProviderProps) => {\r\n\r\n\tconst initialTeamList: Array<ITeam> = [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\troster: [],\r\n\t\t\tstats: generateEmptyStats(),\r\n\t\t\tcolor: 'gray'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\troster: [],\r\n\t\t\tstats: generateEmptyStats(),\r\n\t\t\tcolor: 'gray'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\troster: [],\r\n\t\t\tstats: generateEmptyStats(),\r\n\t\t\tcolor: 'gray'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\troster: [],\r\n\t\t\tstats: generateEmptyStats(),\r\n\t\t\tcolor: 'gray'\r\n\t\t}\r\n\t];\r\n\r\n\tconst initialLeagueStats: ILeagueStats  = { min: {}, median: {}, max: {} };\r\n\tallStatCategories.forEach(category => {\r\n\t\tinitialLeagueStats.min[category] = 0;\r\n\t\tinitialLeagueStats.median[category] = 0;\r\n\t\tinitialLeagueStats.max[category] = 0;\r\n\t})\r\n\r\n\tconst initialLeague = {\r\n\t\tteamList: initialTeamList,\r\n\t\tstats: initialLeagueStats\r\n\t}\r\n\r\n\tconst [ league, setLeague ] = useState(initialLeague);\r\n\t\r\n\tconst addTeam = () => {\r\n\t\tconst { teamList } = league;\r\n\r\n\t\tconst nextTeamList = [\r\n\t\t\t...teamList,\r\n\t\t\t{\r\n\t\t\t\tid: (teamList[league.teamList.length - 1]?.id ?? 0) + 1,\r\n\t\t\t\troster: [],\r\n\t\t\t\tstats: generateEmptyStats(),\r\n\t\t\t\tcolor: 'gray'\r\n\t\t\t}\r\n\t\t];\r\n\t\tconst nextStats = calcLeagueStats(nextTeamList);\r\n\r\n\t\tsetLeague({\r\n\t\t\tteamList: nextTeamList,\r\n\t\t\tstats: nextStats\r\n\t\t})\r\n\t}\r\n\r\n\tconst removeTeam = (id: number) => {\r\n\t\tconst nextTeamList = league.teamList.filter(team => team.id !== id);\r\n\t\tconst nextStats = calcLeagueStats(nextTeamList);\r\n\r\n\t\tsetLeague({\r\n\t\t\tteamList: nextTeamList,\r\n\t\t\tstats: nextStats\r\n\t\t})\r\n\t}\r\n\r\n\tconst updateTeam = (team: ITeam) => {\r\n\t\tconst { teamList } = league;\r\n\t\tconst { id } = team;\r\n\t\t\r\n\t\tconst index = teamList.findIndex(team => team.id === id);\r\n\r\n\t\tteamList[index] = team;\r\n\r\n\t\tsetLeague({\r\n\t\t\tteamList: teamList,\r\n\t\t\tstats: calcLeagueStats(teamList)\r\n\t\t})\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<leagueContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tleague,\r\n\t\t\t\tsetLeague,\r\n\t\t\t\taddTeam,\r\n\t\t\t\tremoveTeam,\r\n\t\t\t\tupdateTeam\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</leagueContext.Provider>\r\n\t)\r\n}\r\n\r\nexport { LeagueContextProvider, leagueContext }","import React, {\r\n\tDispatch,\r\n\tSetStateAction,\r\n\tuseEffect,\r\n\tuseState\r\n} from 'react';\r\nimport {\r\n\tdefaultCategories,\r\n\tallStatCategories,\r\n\tdefaultStatMultipliers\r\n } from '../Util/StatCategories'\r\n import { IStatDictionary } from '../Types/types';\r\n\r\nconst settingsContext = React.createContext({} as ISettingsContext);\r\n\r\ninterface ContextProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\ninterface ISettingsContext {\r\n\tselectedStats: { [key: string]: boolean };\r\n\tsetSelectedStats:  Dispatch<SetStateAction<{ [key: string]: boolean }>>;\r\n\r\n\tstatMultipliers: IStatDictionary;\r\n\tsetStatMultipliers: Dispatch<SetStateAction<IStatDictionary>>;\r\n\r\n\tselectedYear: number | Promise<number>;\r\n\tsetSelectedYear: Dispatch<SetStateAction<number>>;\r\n}\r\n\r\nconst SettingsContextProvider = (props: ContextProviderProps) => {\r\n\tconst defaultSelectedStats: any = {};\r\n\tallStatCategories.forEach(category => (\r\n\t\tdefaultSelectedStats[category] = defaultCategories.includes(category)\r\n\t));\r\n\r\n\tconst [ selectedStats, setSelectedStats ] = useState(defaultSelectedStats);\r\n\r\n\tconst [ selectedYear, setSelectedYear ] = useState((new Date()).getFullYear());\r\n\r\n\tconst [ statMultipliers, setStatMultipliers ] = useState(defaultStatMultipliers);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async (): Promise<void> => {\r\n\t\t\tlet currentYear = (new Date()).getFullYear();\r\n\t\t\tlet response;\r\n\t\t\twhile (!response || !response.ok) {\r\n\t\t\t\tresponse = await fetch(`https://data.nba.net/prod/v1/${currentYear}/players.json`);\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tcurrentYear--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetSelectedYear(currentYear);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<settingsContext.Provider value={{\r\n\t\t\tselectedStats,\r\n\t\t\tselectedYear,\r\n\t\t\tsetSelectedYear,\r\n\t\t\tsetSelectedStats,\r\n\t\t\tstatMultipliers,\r\n\t\t\tsetStatMultipliers\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</settingsContext.Provider>\r\n\t)\r\n}\r\n\r\nexport { SettingsContextProvider, settingsContext }","import React from 'react';\r\nimport { IconButton } from '@material-ui/core'\r\nimport { leagueContext } from '../../Contexts/LeagueContext';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\n\r\nexport const AddTeamButton = () => {\r\n\tconst { addTeam } = React.useContext(leagueContext);\r\n\t\r\n\tconst handleClick = () => {\r\n\t\taddTeam()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<IconButton\r\n\t\t\tonClick={handleClick}\r\n\t\t\tstyle={{color: '#666666'}}\r\n\t\t>\r\n\t\t\t<GroupAddIcon />\r\n\t\t</IconButton>\r\n\t)\r\n}","import React, {\r\n  useState,\r\n  useContext,\r\n  useRef,\r\n  ChangeEvent,\r\n  KeyboardEvent,\r\n  useEffect\r\n} from 'react';\r\nimport { maxTeamSize } from '../../Util/Util'\r\nimport { TextField, Tooltip, ClickAwayListener } from '@material-ui/core';\r\nimport { RadioButtonUncheckedRounded } from '@material-ui/icons';\r\nimport { leagueContext } from '../../Contexts/LeagueContext';\r\nimport { CirclePicker } from 'react-color';\r\n\r\ninterface ITeamLabelProps {\r\n  id: number;\r\n}\r\n\r\nexport const TeamLabel = ({ id }: ITeamLabelProps): JSX.Element => {\r\n  const { league, updateTeam } = useContext(leagueContext);\r\n  const { teamList } = league;\r\n  const thisTeam = teamList.find(team => team.id === id)!;\r\n  const { color } = thisTeam;\r\n\r\n  const defaultDisplayName = `Team ${id}`;\r\n\r\n  const { name = defaultDisplayName, roster } = thisTeam;\r\n  \r\n  const [ isEditingName, setIsEditingName ] = useState(false);\r\n  const [ displayName, setDisplayName ] = useState(name);\r\n  const [ isEditingColor, setIsEditingColor ] = useState(false);\r\n  const nameEditorRef = useRef<HTMLInputElement>(null);\r\n\r\n\r\n  const handleClick = () => {\r\n    setIsEditingName(true);\r\n  }\r\n\r\n  const handleChange = ({ target }: ChangeEvent<{value: string}>) => {\r\n    setDisplayName(target.value);\r\n  }\r\n\r\n  const handleKeyDown = ({ key }: KeyboardEvent<HTMLInputElement>) => {\r\n    key === 'Enter' && nameEditorRef.current!.blur();\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    displayName.trim() || setDisplayName(defaultDisplayName);\r\n    setIsEditingName(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEditingName) {\r\n      nameEditorRef.current!.select();\r\n    } else {\r\n      thisTeam.name = displayName.trim();\r\n      updateTeam(thisTeam);\r\n    }\r\n  }, [isEditingName]);\r\n\r\n  const editColor = () => {\r\n    setIsEditingColor(true);\r\n  }\r\n\r\n  const handleChangeComplete = (color: any) => {\r\n    thisTeam.color = color.hex;\r\n    updateTeam(thisTeam);\r\n  }\r\n\r\n  const onClickAway = () => {\r\n    setIsEditingColor(false)\r\n  }\r\n\r\n  const nameEditor = (): JSX.Element => {\r\n    return (\r\n      <TextField\r\n        size='small'\r\n        value={displayName}\r\n        autoFocus\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        inputProps={{ ref: nameEditorRef, /*maxLength: 12 */ }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='teamLabelContainer'\r\n    >\r\n      <span className='roster-size'>({roster.length}{roster.length >= maxTeamSize && '*'})</span>\r\n      <ClickAwayListener onClickAway={onClickAway}>\r\n        <Tooltip\r\n          title={\r\n            <CirclePicker \r\n              color={color}\r\n              onChangeComplete={handleChangeComplete}\r\n            />\r\n          }\r\n          open={isEditingColor}\r\n          disableFocusListener\r\n          disableHoverListener\r\n          disableTouchListener\r\n          interactive\r\n        >\r\n          <RadioButtonUncheckedRounded\r\n            style={{\r\n              backgroundColor: color,\r\n              fill: '#fff',\r\n              borderRadius: '20px',\r\n              margin: '0px 4px 0px 0px',\r\n              cursor: 'pointer',\r\n              height: 28,\r\n              width: 28\r\n            }}\r\n            onClick={editColor}\r\n          />\r\n        </Tooltip>\r\n      </ClickAwayListener>\r\n      {isEditingName ? nameEditor() : <span className='label' onClick={handleClick}>{name}</span>}\r\n    </div>\r\n  )\r\n}","export const getScrollBarStyles = (selector: string, scrollBarWidth?: number, height?: number | string) => {\r\n  return {\r\n    [`& ${selector}`]: {\r\n      overflowY: 'scroll',\r\n      height: height ?? 'auto'\r\n    },\r\n    [`& ${selector}::-webkit-scrollbar`]: {\r\n      width: scrollBarWidth ?? 4\r\n    },\r\n    [`& ${selector}::-webkit-scrollbar-track`]: {\r\n      backgroundColor: '#0004',\r\n      borderRadius: scrollBarWidth ?? 4 / 2\r\n    },\r\n    [`& ${selector}::-webkit-scrollbar-thumb`]: {\r\n      backgroundColor: '#FFFA',\r\n      borderRadius: scrollBarWidth ?? 4 / 2\r\n    }\r\n  }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { getScrollBarStyles } from '../../SharedStyles/SharedStyles';\r\nimport { nbaRed, nbaBlue } from '../../Util/Util';\r\nimport { ITeam } from '../../Types/types'\r\n\r\nconst avatarSize = 28;\r\nconst buttonCellWidth = 28;\r\nconst headshotCellWidth = 28;\r\nconst nameCellPaddingLeft = 6;\r\n\r\nexport const useRosterTableStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: '60%',\r\n\t\t'& .button-cell' : {\r\n\t\t\twidth: buttonCellWidth,\r\n\t\t},\r\n\t\t'& .no-stats ': {\r\n\t\t\topacity: .25\r\n\t\t},\r\n\t\t'& .button-cell button': {\r\n\t\t\theight: '100%',\r\n\t\t\twidth: '100%'\r\n\t\t},\r\n\t\t'& .headshot-cell' : {\r\n\t\t\twidth: headshotCellWidth\r\n\t\t},\r\n\t\t'& .headshot' : {\r\n\t\t\theight: avatarSize,\r\n\t\t\twidth: avatarSize,\r\n\t\t\tbackgroundColor: ({teamColor}: any) => teamColor ?? 'lightgray',\r\n\t\t},\r\n\t\t'& .mock-player-icon': {\r\n\t\t\theight: avatarSize,\r\n\t\t\twidth: avatarSize,\r\n\t\t\tfill: 'white',\r\n\t\t\tbackgroundColor: ({teamColor}: any) => teamColor ?? 'black',\r\n\t\t\tborderRadius: '15px',\r\n\t\t},\r\n\t\t'& .name-cell' : {\r\n\t\t\twidth: `calc(100% - ${buttonCellWidth}px - ${headshotCellWidth}px - ${nameCellPaddingLeft}px)`,\r\n\t\t\tlineHeight: '32px',\r\n\t\t\tcursor: 'default',\r\n\t\t\toverflow: 'hidden',\r\n\t\t\ttextOverflow: 'ellipsis',\r\n\t\t\tpaddingLeft: nameCellPaddingLeft\r\n\t\t},\r\n\t\t'& .name-cell div' : {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\toverflow: 'inherit',\r\n\t\t\ttextOverflow: 'inherit',\r\n\t\t\twhiteSpace: 'nowrap',\r\n\t\t\tcursor: 'pointer',\r\n\t\t}\r\n\t}\r\n})\r\n\r\nexport const usePopoverStyles = makeStyles({\r\n\tpopper: {\r\n\t\t'& .MuiTooltip-tooltip': {\r\n\t\t\tbackgroundColor: '#fff',\r\n\t\t\tpadding: 0,\r\n\t\t},\r\n\t\t'& .MuiFormLabel-root.Mui-focused': {\r\n      color: nbaBlue,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline' : {\r\n      borderColor: nbaBlue\r\n    },\r\n\t\t...getScrollBarStyles('.MuiList-root', 8, 200),\r\n\t\t'& .LazyLoad.odd': {\r\n\t\t\tbackgroundColor: '#F0F0F0'\r\n\t\t},\r\n\t\t'& .LazyLoad.even': {\r\n\t\t\tbackgroundColor: '#FAFAFA'\r\n\t\t},\r\n\t\t'& .MuiListItem-root' : {\r\n\t\t\tcolor: '#000',\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t'& .MuiListItem-root:hover, & .Mui-selected' : {\r\n\t\t\t// MuiListItem-root.Mui-selected:hover will override this in production version without !improtant\r\n\t\t\tbackgroundColor: `${nbaBlue} !important`,\r\n\t\t\tcolor: '#fff'\r\n\t\t},\r\n\t}\r\n})","import React, {\r\n\tuseState,\r\n\tChangeEvent,\r\n\tMouseEvent,\r\n\tKeyboardEvent,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseContext\r\n} from 'react';\r\nimport { List, ListItem, TextField} from '@material-ui/core'\r\nimport { Player, IPlayerSearchResult } from '../../Types/types';\r\nimport { SignalCellularNull } from '@material-ui/icons';\r\nimport LazyLoad from 'react-lazy-load';\r\nimport { allPlayersContext } from '../../Contexts/AllPlayersContext';\r\n\r\n\r\nexport interface IPlayerSelectProps {\r\n\tteamId?: number;\r\n\troster?: Array<Player>;\r\n\taddPlayer: (personId: string, allPlayers: Array<IPlayerSearchResult>) => Promise<void>;\r\n\tselectedYear: number;\r\n}\r\n\r\nexport const PlayerSelect = (props: IPlayerSelectProps): JSX.Element => {\r\n\tconst { teamId, roster, addPlayer } = props;\r\n\t\r\n\tconst { allPlayers } = useContext(allPlayersContext);\r\n\r\n\tconst [ searchString, setSearchString ] = useState('');\r\n\tconst [ searchResults, setSearchResults ] = useState(allPlayers);\r\n\tconst [ selectedIndex, setSelectedIndex ] = useState(0);\r\n\r\n\tconst rosterIds: Array<string> | undefined = roster?.map(player => player.personId);\r\n\r\n\tconst resultsContainerRef = useRef<HTMLUListElement>(null);\r\n\r\n\tconst lazyLoadHeight = 40;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSearchResults(allPlayers.filter(({ firstName, lastName, isActive }) => isMatching(firstName, lastName) && isActive));\r\n\t\tsetSelectedIndex(0);\r\n\t}, [searchString])\r\n\r\n\tconst handleChange = ({target}: ChangeEvent<{value: string}>) => {\r\n\t\tconst { value } = target;\r\n\t\tsetSearchString(value);\r\n\t}\r\n\r\n\tconst handleClick = ({currentTarget}: MouseEvent<HTMLElement>): void => {\r\n\t\tconst { personId } = currentTarget.dataset;\r\n\t\taddPlayer(personId!, allPlayers);\r\n\t\tsetSearchString('');\r\n\t}\r\n\r\n\tconst handleKeyDown = (event: KeyboardEvent<HTMLDivElement>): void => {\r\n\t\tevent.stopPropagation();\r\n\t\tconst { key } = event;\r\n\t\tif (key === 'Enter' && searchResults.length) {\r\n\t\t\tconst { personId } = searchResults[selectedIndex];\r\n\t\t\tif (!rosterIds?.includes(personId)) {\r\n\t\t\t\taddPlayer(personId, allPlayers);\r\n\t\t\t\tsetSearchString('');\r\n\t\t\t}\r\n\t\t} else if (key === 'ArrowDown') {\r\n\t\t\tsetSelectedIndex(selectedIndex < searchResults.length - 1 ? selectedIndex + 1 : searchResults.length - 1);\r\n\t\t\tresultsContainerRef.current!.scrollTop = selectedIndex * lazyLoadHeight + lazyLoadHeight\r\n\t\t} else if (key === 'ArrowUp') {\r\n\t\t\tsetSelectedIndex(selectedIndex > 0 ? selectedIndex - 1 : 0);\r\n\t\t\tresultsContainerRef.current!.scrollTop = selectedIndex * lazyLoadHeight - lazyLoadHeight\r\n\t\t}\r\n\t}\r\n\r\n\tconst isMatching = (firstName: string, lastName: string): boolean => {\r\n\t\tconst searchStringLower = searchString.toLowerCase();\r\n\t\tconst firstNameLower = firstName.toLowerCase();\r\n\t\tconst lastNameLower = lastName.toLowerCase();\r\n\t\treturn (\r\n\t\t\tfirstNameLower.startsWith(searchStringLower) ||\r\n\t\t\tlastNameLower.startsWith(searchStringLower) ||\r\n\t\t\t`${firstNameLower} ${lastNameLower}`.startsWith(searchStringLower)\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TextField\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tlabel=\"Draft Player\"\r\n\t\t\t\tvalue={searchString}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tonKeyDown={handleKeyDown}\r\n\t\t\t\tautoFocus\r\n\t\t\t\tfocused\r\n\t\t\t/>\r\n\t\t\t<List\r\n\t\t\t\tdisablePadding={true}\r\n\t\t\t\tref={resultsContainerRef}\r\n\t\t\t>\r\n\t\t\t\t{searchResults.map(({ personId, firstName, lastName }, i) => (\r\n\t\t\t\t\t<LazyLoad\r\n\t\t\t\t\t\tkey={`lazyload-${teamId}-${personId}`}\r\n\t\t\t\t\t\theight={lazyLoadHeight}\r\n\t\t\t\t\t\toffsetTop={lazyLoadHeight * i}\r\n\t\t\t\t\t\t/* way more performant than CSS nth-child selector */\r\n\t\t\t\t\t\tclassName={i % 2 ? 'odd' : 'even'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\tdata-person-id={personId}\r\n\t\t\t\t\t\t\tselected={selectedIndex === i && !rosterIds?.includes(personId)}\r\n\t\t\t\t\t\t\tdisabled={rosterIds?.includes(personId)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{firstName} {lastName}\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</LazyLoad>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useState } from 'react';\r\nimport {\r\n\tIconButton,\r\n\tTableRow,\r\n\tTableCell,\r\n\tTooltip,\r\n\tClickAwayListener,\r\n} from '@material-ui/core'\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { IPlayerSearchResult, Player } from '../../Types/types';\r\nimport { PlayerSelect } from './PlayerSelect';\r\nimport { usePopoverStyles } from './RosterTable.styles';\r\n\r\nexport interface IUndraftedRowProps {\r\n\tteamId: number;\r\n\taddPlayer: (personId: string, allPlayers: Array<IPlayerSearchResult>) => Promise<void>;\r\n\troster: Array<Player>;\r\n\tselectedYear: number;\r\n}\r\n\t\r\nexport const UndraftedRow = (props: IUndraftedRowProps): JSX.Element => {\r\n\tconst { addPlayer, teamId, roster, selectedYear } = props;\r\n\t\r\n\tconst [ openTooltip, setOpenTooltip ] = useState(false);\r\n\t\r\n\tconst popoverClasses = usePopoverStyles();\r\n\r\n\tconst handleTooltipClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n\t\tsetOpenTooltip(false)\r\n\t};\r\n\t\r\n\tconst handleTooltipOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n\t\tevent?.stopPropagation();\r\n\t\tsetOpenTooltip(true);\r\n\t};\r\n\r\n\tconst playerSelect = <PlayerSelect \r\n\t\tteamId={teamId}\r\n\t\troster={roster}\r\n\t\taddPlayer={addPlayer}\r\n\t\tkey={`player-select-${teamId}`}\r\n\t\tselectedYear={selectedYear}\r\n\t/>\r\n\r\n\treturn (\r\n\t\t<TableRow className='undrafted-row'>\r\n\t\t\t<ClickAwayListener onClickAway={handleTooltipClose}>\r\n\t\t\t\t<TableCell className='button-cell'>\r\n\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\ttitle={playerSelect}\r\n\t\t\t\t\t\tdisableFocusListener\r\n\t\t\t\t\t\tdisableHoverListener\r\n\t\t\t\t\t\tdisableTouchListener\r\n\t\t\t\t\t\topen={openTooltip}\r\n\t\t\t\t\t\tinteractive\r\n\t\t\t\t\t\tclasses={popoverClasses}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tonClick={handleTooltipOpen}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</TableCell>\r\n\t\t\t</ClickAwayListener>\r\n\t\t\t<TableCell className='headshot-cell no-stats'>\r\n\t\t\t\t<AccountCircleIcon className='mock-player-icon' />\r\n\t\t\t</TableCell>\r\n\t\t\t<TableCell className='name-cell no-stats'>\r\n\t\t\t\tUndrafted\r\n\t\t\t</TableCell>\r\n\t\t</TableRow>\r\n\t)\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { nbaBlue } from '../../Util/Util';\r\nimport { getScrollBarStyles } from '../../SharedStyles/SharedStyles';\r\n\r\nexport const useStatsTableStyles = makeStyles({\r\n    root: {\r\n        '& td' : {\r\n            lineHeight: '32px'\r\n        },\r\n        '& .stat-label' : {\r\n            textTransform: 'uppercase',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            textAlign: 'left',\r\n            paddingLeft: 6,\r\n            width: 'calc(100% - 50px - 12px)',\r\n        },\r\n        '& .stat-value' : {\r\n            width: 50,\r\n            paddingRight: 6,\r\n            textAlign: 'right',\r\n        },\r\n        '& .best' : {\r\n            backgroundColor: (props: any) => props.color,\r\n            color: 'white'\r\n        }\r\n    }\r\n})\r\n\r\nexport const useTooltipStyles = makeStyles({\r\n    popper: {\r\n        ...getScrollBarStyles('.MuiTooltip-tooltip'),\r\n    },\r\n    tooltip: {\r\n        paddingTop: 0,\r\n        overflowY: 'scroll',\r\n        color: '#000',\r\n        maxHeight: '50vh',\r\n        backgroundColor: 'white',\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n        '& .player-label': {\r\n            position: 'sticky',\r\n            top: 0,\r\n            backgroundColor: 'white',\r\n            padding: '2px 0px'\r\n        },\r\n        '& p' : {\r\n            margin: '6px 0px',\r\n            fontSize: 14\r\n        },\r\n        '& tr:nth-child(odd)' : {\r\n\t\t\tbackgroundColor: '#FAFAFA'\r\n\t\t},\r\n\t\t'& tr:nth-child(even)' : {\r\n\t\t\tbackgroundColor: '#F0F0F0'\r\n\t\t},\r\n        '& td' : {\r\n            border: 'none',\r\n            textTransform: 'uppercase'\r\n        },\r\n        '& .stat-value' : {\r\n            textAlign: 'right'\r\n        }\r\n    }\r\n})\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { getScrollBarStyles } from '../../SharedStyles/SharedStyles';\r\n\r\nexport const useAccordionStyles = makeStyles({\r\n\troot: {\r\n\t\tmaxWidth: 'calc(100% - 24px)',\r\n\t\tmargin: '0px 6px 6px !important',\r\n\t\tpaddingTop: 6,\r\n\t\tpaddingRight: 6,\r\n\t\tpaddingBottom:6,\r\n\t\tpaddingLeft: 6,\r\n\t\tminWidth: 'fit-content'\r\n\t}\r\n})\r\n\r\nexport const useAccordionSummaryStyles = makeStyles({\r\n\troot: {\r\n\t\tminHeight: 'fit-content !important',\r\n\t\tpadding: '0px',\r\n\t\t'& :hover': {\r\n\t\t\tcursor: 'default'\r\n\t\t}\r\n\t\t\r\n\t},\r\n\tcontent: {\r\n\t\tjustifyContent: 'flex-end',\r\n\t\tmargin: '0px !important',\r\n\t\t'& .MuiTextField-root': {\r\n\t\t\twidth: 140\r\n\t\t},\r\n\t\t'& input[type=text]' : {\r\n\t\t\tpadding: '2px 6px',\r\n\t\t},\r\n\t\t'& .teamLabelContainer': {\r\n\t\t\tflexGrow: 2,\r\n\t\t\tdisplay: 'flex',\r\n\t\t},\r\n\t\t'& span': {\r\n\t\t\tlineHeight: '28px'\r\n\t\t},\r\n\t\t'& span.roster-size' : {\r\n\t\t\ttextAlign: 'center',\r\n\t\t\twidth: 28\r\n\t\t},\r\n\t\t'& span.label': {\r\n\t\t\tcursor: 'text'\r\n\t\t},\r\n\t\t'& button' : {\r\n\t\t\tpadding: 0\r\n\t\t}\r\n\t},\r\n\tfocused: {\r\n\t\tbackgroundColor: 'unset !important'\r\n\t}\r\n});\r\n\r\nexport const useAccordionDetailStyles = makeStyles({\r\n\troot: {\r\n\t\tflexDirection: 'column',\r\n\t\tpadding: '6px 0px 0px 0px'\r\n\t}\r\n})\r\n\r\nexport const useGridStyles = makeStyles({\r\n\troot: {\r\n\t\tflexWrap: 'nowrap',\r\n\t\talignItems: 'stretch',\r\n\t\t'& tr:nth-child(odd)' : {\r\n\t\t\tbackgroundColor: '#FAFAFA'\r\n\t\t},\r\n\t\t'& tr:nth-child(even)' : {\r\n\t\t\tbackgroundColor: '#F0F0F0'\r\n\t\t},\r\n\t\t...getScrollBarStyles('.MuiTableContainer-root')\r\n\t}\r\n})\r\n\r\nexport const useTableContainerStyles = makeStyles({\r\n\troot: {\r\n\t\theight: 'calc(22.5vh - 6px - 6px - 24px - 6px - 6px - 4px) !important',\r\n\t\twidth: '60%',\r\n\t\toverflowY: 'scroll',\r\n\t\toverflowX: 'hidden',\r\n\t\t'& table': {\r\n\t\t\twidth: '100%'\r\n\t\t},\r\n\t\t'& tbody' : {\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\t'& tr': {\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\t'& td': {\r\n\t\t\theight: 28,\r\n\t\t\tdisplay: 'inline-block',\r\n\t\t\tborder: 'none',\r\n\t\t\tpaddingBottom: 1\r\n\t\t}\r\n\t}\r\n})","import React, {\r\n\tuseEffect,\r\n\tuseContext\r\n} from 'react';\r\nimport {\r\n\tIconButton,\r\n\tTable,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tAvatar,\r\n\tTooltip,\r\n\tClickAwayListener\r\n} from '@material-ui/core'\r\nimport { IPlayerSearchResult, Player } from '../../Types/types';\r\nimport { useRosterTableStyles } from './RosterTable.styles';\r\nimport { maxTeamSize, getSeasonStats } from '../../Util/Util';\r\nimport { UndraftedRow } from './UndraftedRow'\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { useTooltipStyles } from './StatsTable.styles';\r\nimport { settingsContext } from '../../Contexts/SettingsContext' \r\nimport { leagueContext } from '../../Contexts/LeagueContext' \r\nimport { useTableContainerStyles } from './Team.styles';\r\n\r\n\r\nexport interface IRosterTableProps {\r\n\tid: number;\r\n\troster: Array<Player>;\r\n\taddPlayer: (personId: string, allPlayers: Array<IPlayerSearchResult>) => Promise<void>;\r\n\tremovePlayer: (personId: string) => void;\r\n}\r\n\r\nexport const RosterTable = (props: IRosterTableProps): JSX.Element => {\r\n\tconst { id, roster, removePlayer, addPlayer } = props;\r\n\r\n\tconst { selectedYear } = useContext(settingsContext);\r\n\tconst { league } = useContext(leagueContext);\r\n\tconst { teamList } = league;\r\n\tconst thisTeam = teamList.find(team => team.id === id);\r\n\r\n\tconst [openTooltip, setOpenTooltip] = React.useState<number | null>(null);\r\n\r\n\tconst handleTooltipClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n\t\tevent.stopPropagation();\r\n\t\tsetOpenTooltip(null);\r\n\t};\r\n\t\r\n\tconst handleTooltipOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n\t\tevent.stopPropagation();\r\n\t\tconst { index } = event.currentTarget.dataset;\r\n\t\tsetOpenTooltip(parseInt(index!))\r\n  };\r\n\r\n\t// const tableContainerClasses = useTableContainerStyles(thisTeam);\r\n\tconst tableContainerClasses = useTableContainerStyles();\r\n\tconst rosterTableClasses = useRosterTableStyles({\r\n\t\tteamColor: thisTeam!.color\r\n\t});\r\n\tconst tooltipClasses = useTooltipStyles();\r\n\r\n\t// only display player's first initial if displaying full name causes text overflow\r\n\tuseEffect(() => {\r\n\t\tconst nameCells = document.querySelectorAll(`.roster-table-${id} .name-cell div`);\r\n\t\tnameCells.forEach(nameCell => {\r\n\t\t\tif (nameCell.scrollWidth > nameCell.clientWidth) {\r\n\t\t\t\tconst fullName = nameCell.innerHTML.split(' ');\r\n\t\t\t\tfullName[0] = `${fullName[0][0]}. `;\r\n\t\t\t\tnameCell.innerHTML = fullName.join('').toString();\r\n\t\t\t}\r\n\t\t})\r\n\t}, [roster.length])\r\n\r\n\t\r\n\tconst UndraftedRows = () => {\r\n\t\tconst rows: Array<JSX.Element> = [];\r\n\t\twhile (roster.length + rows.length < maxTeamSize) {\r\n\t\t\trows.push(\r\n\t\t\t\t<UndraftedRow\r\n\t\t\t\t\tkey={`undrafted-table-row-${rows.length}`}\r\n\t\t\t\t\tteamId={id}\r\n\t\t\t\t\troster={roster}\r\n\t\t\t\t\taddPlayer={addPlayer}\r\n\t\t\t\t\tselectedYear={selectedYear as number}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn <>{rows}</>\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<TableContainer classes={tableContainerClasses}>\t\r\n\t\t\t<Table\r\n\t\t\t\tpadding='none'\r\n\t\t\t\tsize='small'\r\n\t\t\t\tclasses={rosterTableClasses}\r\n\t\t\t\tclassName={`roster-table-${id}`}\r\n\t\t\t>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{roster.map((player: Player, i) => {\r\n\t\t\t\t\t\tconst { personId, firstName, lastName } = player;\r\n\r\n\t\t\t\t\t\tconst playerSeasonStats = getSeasonStats(player, selectedYear as number);\r\n\t\t\t\t\t\tconst playerStatsArray = Object.entries(playerSeasonStats);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableRow key={`roster-table-row-${id}-${personId}`}>\r\n\t\t\t\t\t\t\t\t<TableCell className='button-cell'>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => removePlayer(personId)}\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<RemoveIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`headshot-cell ${playerSeasonStats.min > 0 ? '' : 'no-stats' }`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\tsrc={`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${personId}.png`}\r\n\t\t\t\t\t\t\t\t\t\tclassName='headshot'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`name-cell ${playerSeasonStats.min > 0 ? '' : 'no-stats' }`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ClickAwayListener onClickAway={handleTooltipClose}>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='player-label'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{firstName} {lastName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{selectedYear}-{(selectedYear as number) + 1}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Regular Season</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Table padding='none' size='small'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{playerStatsArray.map(([category, value]) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={`total-stats-row-${id}-${category}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{category}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className='stat-value'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{value.toFixed(1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tarrow\r\n\t\t\t\t\t\t\t\t\t\t\tdisableFocusListener\r\n\t\t\t\t\t\t\t\t\t\t\tdisableHoverListener\r\n\t\t\t\t\t\t\t\t\t\t\tdisableTouchListener\r\n\t\t\t\t\t\t\t\t\t\t\topen={openTooltip === i}\r\n\t\t\t\t\t\t\t\t\t\t\tinteractive\r\n\t\t\t\t\t\t\t\t\t\t\tclasses={tooltipClasses}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div onClick={handleTooltipOpen} data-index={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{firstName} {lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</ClickAwayListener>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t<UndraftedRows />\r\n\t\t\t\t</TableBody>\t\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t)\r\n}","import React, { useContext, useEffect, useRef } from 'react';\r\nimport { leagueContext } from '../../Contexts/LeagueContext';\r\nimport { settingsContext } from '../../Contexts/SettingsContext';\r\nimport {\r\n\tTable,\r\n\tTableBody,\r\n\tTableRow,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTooltip\r\n} from '@material-ui/core'\r\nimport { useStatsTableStyles } from './StatsTable.styles';\r\nimport { isBestInCategory } from '../../Util/Util';\r\nimport { fullStatNameDictionary } from '../../Util/StatCategories';\r\nimport { IStatDictionary } from '../../Types/types';\r\nimport { useTableContainerStyles } from './Team.styles';\r\n\r\n\r\nexport interface ITeamStatsTableProps {\r\n\tteamId: number;\r\n\tstats: IStatDictionary;\r\n\tcolor: string;\r\n}\r\n\r\nexport const StatsTable = (props: ITeamStatsTableProps): JSX.Element => {\r\n\tconst { teamId, stats, color } = props;\r\n\r\n\tconst { league } = useContext(leagueContext);\r\n\r\n\tconst { stats: leagueStats } = league;\r\n\r\n\tconst { selectedStats } = useContext(settingsContext);\r\n\r\n\tconst selectedTeamStats = Object.entries(stats)\r\n\t\t.filter(([category]) => selectedStats[category]);\r\n\r\n\tconst tableContainerClasses = useTableContainerStyles({width: '40%'});\r\n\tconst statsTableClasses = useStatsTableStyles({color});\r\n\r\n\treturn (\r\n\t\t<TableContainer classes={tableContainerClasses}>\r\n\t\t\t<Table padding='none' size='small' classes={statsTableClasses}>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{selectedTeamStats.map(([ category, value ]) => (\r\n\t\t\t\t\t\t<TableRow key={`total-stats-row-${teamId}-${category}`}>\r\n\t\t\t\t\t\t\t{fullStatNameDictionary[category] ? (\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={fullStatNameDictionary[category]}\r\n\t\t\t\t\t\t\t\t\tplacement='top'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TableCell className='stat-label'>{category}</TableCell>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<TableCell className='stat-label'>{category}</TableCell>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tclassName={`stat-value`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{isBestInCategory(value, category, leagueStats) && (\r\n\t\t\t\t\t\t\t\t\t<span>&#x2605;</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<span style={{verticalAlign: 'middle'}}>\r\n\t\t\t\t\t\t\t\t\t{value?.toFixed(1)}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t)\r\n}","import React, {\r\n\tuseState,\r\n\tuseEffect,\r\n\tuseContext\r\n} from 'react';\r\nimport {\r\n\tAccordion,\r\n\tAccordionSummary,\r\n\tAccordionDetails,\r\n\tGrid,\r\n\tIconButton,\r\n} from '@material-ui/core'\r\nimport { ITeam, IStatDictionary } from '../../Types/types';\r\nimport { leagueContext } from '../../Contexts/LeagueContext';\r\nimport { settingsContext } from '../../Contexts/SettingsContext';\r\nimport { \r\n\tcalcTeamStats,\r\n\tgetPlayerStats,\r\n\tconvertStatStringsToNumbers,\r\n\taddCalculatedStats,\r\n\tcalcFantasyPoints,\r\n\tisBestInCategory\r\n} from '../../Util/Util';\r\nimport { TeamLabel } from './TeamLabel';\r\nimport { RosterTable } from './RosterTable';\r\nimport { StatsTable } from './StatsTable';\r\nimport { \r\n\tuseAccordionStyles,\r\n\tuseAccordionSummaryStyles,\r\n\tuseAccordionDetailStyles,\r\n\tuseGridStyles\r\n} from './Team.styles';\r\n\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport CropDinIcon from '@material-ui/icons/CropDin';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { IPlayerSearchResult, Player } from '../../Types/types';\r\n\r\nexport const Team = (props: ITeam) => {\r\n\tconst { id } = props;\r\n\tconst [ isExpanded, setIsExpanded ] = useState(true);\r\n\r\n\tconst { selectedYear, selectedStats, statMultipliers } = useContext(settingsContext);\r\n\tconst { removeTeam, updateTeam, league } = useContext(leagueContext);\r\n\r\n\tconst { teamList, stats: leagueStats } = league;\r\n\r\n\tconst thisTeam = teamList.find(team => team.id === id)!;\r\n\r\n\t// to do: https://casesandberg.github.io/react-color/\r\n\r\n\tconst accordionClasses = useAccordionStyles();\r\n\tconst accordionSummaryClasses = useAccordionSummaryStyles();\r\n\tconst accordionDetailClasses = useAccordionDetailStyles();\r\n\tconst gridClasses = useGridStyles();\r\n\r\n\tconsole.log(`rendering team: ${id}`);\r\n\r\n\tuseEffect(() => {\r\n\t\tthisTeam.roster.forEach(player => {\r\n\t\t\tplayer.stats.regularSeason.season.map(season => {\r\n\t\t\t\tcalcFantasyPoints(season.total, statMultipliers);\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tthisTeam.stats = calcTeamStats(thisTeam.roster, selectedYear);\r\n\t\tcalcFantasyPoints(thisTeam.stats, statMultipliers);\r\n\t\t// thisTeam.stats.scl = calcCategoryLeads(thisTeam.stats);\r\n\t\tupdateTeam(thisTeam);\r\n\t}, [...Object.values(selectedStats), ...Object.values(statMultipliers), selectedYear])\r\n\r\n\tconst minimize = () => {\r\n\t\tsetIsExpanded(!isExpanded);\r\n\t}\r\n\r\n\tconst maximize = () => {\r\n\t\talert('This feature is yet to be constructed!');\r\n\t}\r\n\r\n\tconst close = () => {\r\n\t\tremoveTeam(id)\r\n\t}\r\n\r\n\t// const calcCategoryLeads = (teamStats: IStatDictionary) => {\r\n\t// \tlet result = 0;\r\n\t// \tfor (const category in teamStats) {\r\n\t// \t\tif (!selectedStats[category] || category === 'scl') {\r\n\t// \t\t\tcontinue;\r\n\t// \t\t}\r\n\t// \t  if (isBestInCategory(teamStats[category], category, leagueStats)) {\r\n\t// \t\t\tresult++;\r\n\t// \t\t};\r\n\t// \t}\r\n\t// \treturn result;\r\n\t// }\r\n\r\n\tconst addPlayer = async (personId: string, allPlayers: Array<IPlayerSearchResult>): Promise<void> => {\r\n\t\tconst { firstName, lastName } = allPlayers.find(player => player.personId === personId)!;\r\n\t\tconst statStringObj = (await getPlayerStats(personId)).stats;\r\n\t\tconst stats = convertStatStringsToNumbers(statStringObj);\r\n\t\tstats.latest = addCalculatedStats(stats.latest);\r\n\t\tstats.regularSeason.season = stats.regularSeason.season.map((season: { total: IStatDictionary }) => {\r\n\t\t\tseason.total = addCalculatedStats(season.total);\r\n\t\t\tcalcFantasyPoints(season.total, statMultipliers);\r\n\t\t\treturn season;\r\n\t\t});\r\n\r\n\t\tconst player: Player = {\r\n\t\t\tpersonId,\r\n\t\t\tfirstName,\r\n\t\t\tlastName,\r\n\t\t\tstats\r\n\t\t};\r\n\t\tconsole.log(player);\r\n\r\n\t\tthisTeam.roster.push(player);\r\n\t\tthisTeam.stats = calcTeamStats(thisTeam.roster, selectedYear);\r\n\t\tupdateTeam(thisTeam);\r\n\t}\r\n\r\n\tconst removePlayer = (personId: string): void => {\r\n\t\tthisTeam.roster = thisTeam.roster.filter(player => player.personId !== personId);\r\n\t\tthisTeam.stats = calcTeamStats(thisTeam.roster, selectedYear);\r\n\t\tupdateTeam(thisTeam);\r\n\t}\r\n\r\n\t// PersonAdd icon\r\n\t// FilterNone (for copy)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Accordion\r\n\t\t\t\tclasses={accordionClasses}\r\n\t\t\t\texpanded={isExpanded}\r\n\t\t\t>\r\n\t\t\t\t<AccordionSummary classes={accordionSummaryClasses}>\r\n\t\t\t\t\t<TeamLabel id={id} />\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tonClick={minimize}\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ isExpanded ? <MinimizeIcon /> : <CropDinIcon /> }\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tonClick={maximize}\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<LaunchIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tonClick={close}\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</AccordionSummary>\r\n\t\t\t\t<AccordionDetails\r\n\t\t\t\t\tclasses={accordionDetailClasses}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection='row'\r\n\t\t\t\t\t\tclasses={gridClasses}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RosterTable\r\n\t\t\t\t\t\t\tid={id} \r\n\t\t\t\t\t\t\troster={thisTeam.roster}\r\n\t\t\t\t\t\t\taddPlayer={addPlayer}\r\n\t\t\t\t\t\t\tremovePlayer={removePlayer}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<StatsTable\r\n\t\t\t\t\t\t\tteamId={id}\r\n\t\t\t\t\t\t\tstats={thisTeam.stats}\r\n\t\t\t\t\t\t\tcolor={thisTeam.color ?? 'lightgray'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</AccordionDetails>\r\n\t\t\t</Accordion>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect, useContext, FunctionComponent } from 'react';\r\nimport { Team } from '../Team/Team';\r\nimport { ITeam } from '../../Types/types';\r\nimport { getAllPlayers } from '../../Util/Util';\r\nimport { leagueContext } from '../../Contexts/LeagueContext';\r\nimport { allPlayersContext } from '../../Contexts/AllPlayersContext';\r\nimport { settingsContext } from '../../Contexts/SettingsContext';\r\n\r\nexport const AllTeamsContainer: FunctionComponent = () => {\r\n\tconst { league } = useContext(leagueContext)\r\n\tconst { teamList } = league;\r\n\tconst { setAllPlayers } = useContext(allPlayersContext);\r\n\tconst { selectedYear } = useContext(settingsContext)\r\n\r\n\tuseEffect(() => {\r\n\t\t(async (): Promise<void> => {\r\n\t\t\tsetAllPlayers(await getAllPlayers(selectedYear as number));\r\n\t\t})();\r\n\t}, [selectedYear])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{teamList.map((teamProps: ITeam): React.ReactNode => (\r\n\t\t\t\t\t<Team\r\n\t\t\t\t\t\t{...teamProps}\r\n\t\t\t\t\t\tkey={teamProps.id}\r\n\t\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { getScrollBarStyles } from './SharedStyles/SharedStyles';\r\nimport { nbaBlue } from './Util/Util';\r\n\r\nexport const useAppGridStyles = makeStyles({\r\n\troot: {\r\n\t\tcursor: 'default',\r\n\t\tbackgroundColor: 'lightgray',\r\n\t\t...getScrollBarStyles('.sidebar-scrollbar', 8),\r\n\t\t...getScrollBarStyles('.visualizations-container', 8),\r\n\t\t'& .top-bar' : {\r\n\t\t\theight: '10vh',\r\n\t\t\tpadding: 6\r\n\t\t},\r\n\t\t'& h1' : {\r\n\t\t\tcolor: nbaBlue,\r\n\t\t\tmargin: '0px 12px 0px 0px'\r\n\t\t}\r\n\t}\r\n})","import React, { useContext } from 'react';\r\nimport { List, ListItem, Checkbox, ListItemText } from '@material-ui/core'\r\nimport { settingsContext } from '../../Contexts/SettingsContext';\r\n\r\nexport const SettingsPanel = () => {\r\n  const { selectedStats, setSelectedStats } = useContext(settingsContext);\r\n  const settingsArray: Array<{category: string, show: boolean}> = [];\r\n  \r\n  for (const key in selectedStats) {\r\n    settingsArray.push({category: key, show: selectedStats[key]})\r\n  }\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    const { value } = event.currentTarget.dataset\r\n    selectedStats[value!] = !selectedStats[value!]\r\n    setSelectedStats({...selectedStats})\r\n  };\r\n\r\n  return (\r\n    <List\r\n      dense\r\n    >\r\n      {settingsArray.map(({ category, show }) => (\r\n        <ListItem\r\n          button\r\n          data-value={category}\r\n          onClick={handleClick}\r\n          key={`setting-${category}`}\r\n          disableGutters\r\n        >\r\n          <ListItemText primary={category} style={{textTransform: 'uppercase'}} />\r\n          <Checkbox checked={show} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { nbaRed, nbaBlue } from '../../Util/Util'\r\nimport { getScrollBarStyles } from '../../SharedStyles/SharedStyles'\r\n\r\nexport const useSettingsPanelStyles = makeStyles({\r\n  popper: {\r\n    ...getScrollBarStyles('.MuiTooltip-tooltip'),\r\n  },\r\n  tooltip: {\r\n    overflowY: 'scroll',\r\n    color: '#000',\r\n    maxHeight: '50vh',\r\n    backgroundColor: 'white',\r\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n  }\r\n})","import React from 'react';\r\nimport { ClickAwayListener, IconButton, Tooltip } from '@material-ui/core'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { SettingsPanel } from './SettingsPanel';\r\nimport { useSettingsPanelStyles } from './SettingsPanel.styles';\r\n\r\nexport const SettingsButton = () => {\r\n  const settingsClasses = useSettingsPanelStyles();\r\n  \r\n  const [open, setIsOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <div>\r\n        <Tooltip\r\n          title={<SettingsPanel />}\r\n          disableFocusListener\r\n          disableHoverListener\r\n          disableTouchListener\r\n          open={open}\r\n          interactive\r\n          classes={settingsClasses}\r\n          arrow\r\n        >\r\n          <IconButton onClick={handleClick}>\r\n            <VisibilityIcon style={{color: '#666666'}} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { List, ListItem, Button, TextField, ListItemText, InputAdornment } from '@material-ui/core'\r\nimport { settingsContext } from '../../Contexts/SettingsContext';\r\nimport { defaultStatMultipliers } from '../../Util/StatCategories'\r\n\r\nexport const MultiplierPanel = () => {\r\n  const {\r\n    statMultipliers,\r\n    setStatMultipliers\r\n  } = useContext(settingsContext);\r\n\r\n  const statMultiplierArray: Array<{category: string, multiplier: number}> = [];\r\n\r\n  for (const key in statMultipliers) {\r\n    statMultiplierArray.push({category: key, multiplier: statMultipliers[key]})\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const category = event.currentTarget.dataset.category!;\r\n    const multiplier = parseFloat(event.currentTarget.value ?? '0');\r\n    const nextMultipliers = { ...statMultipliers };\r\n    nextMultipliers[category] = multiplier;\r\n    setStatMultipliers(nextMultipliers);\r\n  };\r\n\r\n  const resetStatMultipliers = () => {\r\n    setStatMultipliers(defaultStatMultipliers);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant='contained'\r\n        size='small'\r\n        color='primary'\r\n        onClick={resetStatMultipliers}\r\n      >\r\n        Reset Defaults\r\n      </Button>\r\n      <List\r\n        dense\r\n      >\r\n        {statMultiplierArray.map(({ category, multiplier }) => {\r\n          return (\r\n            <ListItem\r\n              key={`setting-${category}`}\r\n              disableGutters\r\n            >\r\n              <ListItemText primary={category} style={{textTransform: 'uppercase'}} />\r\n              <TextField\r\n                onChange={handleChange}\r\n                size='small'\r\n                variant='outlined'\r\n                type='number'\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">&times;</InputAdornment>,\r\n                }}\r\n                inputProps={{\r\n                  'data-category': category\r\n                }}\r\n                value={multiplier}\r\n                style={{ width: 100, marginLeft: 6 }}\r\n              />\r\n            </ListItem>\r\n          )\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ClickAwayListener, IconButton, Tooltip } from '@material-ui/core'\r\nimport PermDataSettingIcon from '@material-ui/icons/PermDataSetting'\r\n\r\nimport { MultiplierPanel } from './MultiplierPanel';\r\nimport { useSettingsPanelStyles } from '../SettingsButton/SettingsPanel.styles';\r\n\r\nexport const MultiplierButton = () => {\r\n  const settingsClasses = useSettingsPanelStyles();\r\n  \r\n  const [open, setIsOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      {/* this div is necessary for click away listener to work */}\r\n      <div>\r\n        <Tooltip\r\n          title={<MultiplierPanel />}\r\n          disableFocusListener\r\n          disableHoverListener\r\n          disableTouchListener\r\n          open={open}\r\n          interactive\r\n          classes={settingsClasses}\r\n          arrow\r\n        >\r\n          <IconButton onClick={handleClick}>\r\n            <PermDataSettingIcon style={{color: '#666666'}} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const chartCardPadding = 6\r\nexport const chartCardMargin = 6;\r\n\r\nexport const useBarChartStyles = makeStyles({\r\n  root: {\r\n    height: `calc(22.5vh - ${chartCardPadding * 2}px - ${chartCardMargin}px)`,\r\n    width: `calc(100% - ${chartCardPadding * 2}px - ${chartCardMargin * 2}px)`,\r\n    marginTop: 0,\r\n    marginRight: chartCardMargin,\r\n    marginBottom: chartCardMargin,\r\n    marginLeft: chartCardMargin,\r\n    padding: chartCardPadding,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& p': {\r\n      textTransform: 'uppercase',\r\n      margin: 0\r\n    },\r\n    '& svg' : {\r\n      overflow: 'visible',\r\n      marginBottom: 20,\r\n      backgroundColor: '#dddddd'\r\n    },\r\n    '& rect' : {\r\n      outline: '1px solid #dddddd'\r\n    },\r\n    '& rect:nth-child(odd)': {\r\n      // fill: '#444444',\r\n    },\r\n    '& rect:nth-child(even)': {\r\n      // fill: '#666666',\r\n    },\r\n    '& rect:hover': {\r\n      opacity: 1 \r\n    },\r\n    '& .player-name-label': {\r\n      fill: '#fff'\r\n    },\r\n    '& svg div': {\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      textAlign: 'right',\r\n      height: '100%',\r\n      padding: '0px 6px',\r\n    }\r\n  }\r\n})\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Card } from '@material-ui/core';\r\nimport * as d3 from 'd3';\r\nimport { leagueContext } from '../../../Contexts/LeagueContext';\r\nimport { settingsContext } from '../../../Contexts/SettingsContext';\r\nimport { useBarChartStyles } from './BarChart.styles';\r\nimport { getSeasonStats} from '../../../Util/Util';\r\nimport { fullStatNameDictionary } from '../../../Util/StatCategories';\r\n\r\nexport interface IStackedBarChartProps {\r\n  statCategory: string\r\n}\r\n\r\ninterface ITeamBar {\r\n  id: number;\r\n  name?: string;\r\n  teamTotal: number;\r\n  individualBars: Array<IIndividualBar>;\r\n  color?: string;\r\n}\r\n\r\ninterface IIndividualBar {\r\n  personId: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  statValue: number;\r\n  xPos: number;\r\n  barWidth: number;\r\n  color?: string;\r\n}\r\n\r\nexport const StackedBarChart = (props: IStackedBarChartProps) => {\r\n  const { statCategory } = props;\r\n  const { league } = useContext(leagueContext);\r\n\r\n  const { teamList, stats: leagueStats } = league;\r\n\r\n  const { selectedYear } = useContext(settingsContext);\r\n  const barChartClasses = useBarChartStyles();\r\n\r\n  // const { [statCategory]: min } = leagueStats.min;\r\n  // const { [statCategory]: median } = leagueStats.median;\r\n  const { [statCategory]: max } = leagueStats.max;\r\n\r\n  useEffect(() => {\r\n    const barChartCard = document.querySelector('.bar-chart-container');\r\n    const svgVerticalMargin = 26;\r\n    const svgHorizontalMargin = 80;\r\n    const svgHeight = barChartCard!.clientHeight - (svgVerticalMargin * 2);\r\n    const svgWidth = barChartCard!.clientWidth - (svgHorizontalMargin * 2);\r\n    const barMargin = 2;\r\n    const barHeight = svgHeight / teamList.length;\r\n    const xScale = d3.scaleLinear()\r\n      .domain([0, max || 100])\r\n      .range([0, svgWidth]);\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .tickSizeOuter(0);\r\n    const yScale = d3.scalePoint()\r\n      .domain(teamList.map(team => team.name ?? `Team ${team.id}`))\r\n      .range([0, svgHeight])\r\n      .padding(.5);\r\n    const yAxis = d3.axisLeft(yScale)\r\n      .tickSizeInner(3)\r\n      .tickSizeOuter(0);\r\n        \r\n    const dataset: Array<ITeamBar> = teamList.map((team) => {\r\n      const barWidths: Array<number> = team.roster.map((player) => {\r\n        const selectedSeasonStats = getSeasonStats(player, selectedYear as number)\r\n        return xScale(selectedSeasonStats[statCategory] ?? 0);\r\n      })\r\n\r\n      const individualBars = team.roster\r\n        .map((player, i) => {\r\n          const { personId, firstName, lastName } = player\r\n          const selectedSeasonStats = getSeasonStats(player, selectedYear as number);\r\n          const statValue = selectedSeasonStats[statCategory] ?? 0;\r\n          const xPos = i === 0 ? 0 : barWidths.reduce((acc, cur, idx) => idx < i ? acc + cur : acc); \r\n          const barWidth = barWidths[i];\r\n          return {\r\n            personId,\r\n            firstName,\r\n            lastName,\r\n            statValue,\r\n            xPos,\r\n            barWidth,\r\n            color: team.color\r\n          };\r\n        })\r\n        .filter(({barWidth}) => barWidth > 0);\r\n\r\n      return {\r\n        id: team.id,\r\n        name: team.name,\r\n        teamTotal: team.stats[statCategory],\r\n        individualBars\r\n      };\r\n    });\r\n\r\n    const svg = d3.select(`.bar-chart-container.${statCategory} svg`)\r\n      .attr('width', svgWidth)\r\n      .attr('height', svgHeight);\r\n\r\n    // bar\r\n    svg.selectAll(`.bar-chart-container.${statCategory}`)\r\n      .data(dataset)\r\n      .enter()\r\n      .append('g')\r\n        .attr('transform', (d, i) => `translate(0, ${barHeight * i})`)\r\n        .attr('data-team-id', (d) => d.id)\r\n      .append('g')\r\n      .selectAll('g')\r\n      .data((d) => d.individualBars)\r\n      .enter()\r\n      .append('rect')\r\n        .attr('x', (d) => d.xPos)\r\n        .attr('width', (d) => d.barWidth)\r\n        .attr('height', barHeight - barMargin)\r\n        .attr('fill', (d) => d.color ?? 'gray' )\r\n        \r\n    // total stat label\r\n    svg.selectAll('[data-team-id]')\r\n      .append('text')\r\n        .text((d: any) => d.teamTotal ? d.teamTotal.toFixed(1) : '')\r\n        .attr('x', (d: any) => xScale(d.teamTotal) + 6)\r\n        .attr('y', barHeight / 2)\r\n        .attr('alignment-baseline', 'middle')\r\n      \r\n    // player name label\r\n    svg.selectAll('[data-team-id]')\r\n      .append('g')\r\n      .selectAll('g')\r\n      .data((d: any) => d.individualBars)\r\n      .enter()\r\n      .append('text')\r\n        .text((d: any) => d.statValue ? `${d.firstName[0]}. ${d.lastName} ${d.statValue.toFixed(1)}` : '')\r\n        .attr('x', (d: any) => d.xPos + (d.barWidth / 2))\r\n        .attr('y', barHeight / 2)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('alignment-baseline', 'middle')\r\n        .classed('player-name-label', true)\r\n\r\n    // x axis label\r\n    svg.append('g')\r\n      .attr('transform', `translate(0, ${svgHeight})`)\r\n      .call(xAxis);\r\n\r\n    // y axis label\r\n    svg.append('g')\r\n      .call(yAxis);\r\n\r\n    return () => { svg.html(null) };\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      classes={barChartClasses}\r\n      className={`bar-chart-container ${statCategory}`}\r\n    >\r\n      <p>{statCategory} {fullStatNameDictionary[statCategory] ? `(${fullStatNameDictionary[statCategory]})` : ''}</p>\r\n      <svg />\r\n    </Card>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport { settingsContext } from '../../Contexts/SettingsContext';\r\nimport { StackedBarChart } from './BarChart/StackedBarChart';\r\nexport const Visualizations = () => {\r\n  const { selectedStats } = useContext(settingsContext);\r\n\r\n  const showStatsArray: Array<string> = Object.keys(selectedStats)\r\n    .filter(category => selectedStats[category]);\r\n\r\n  return (\r\n    <>\r\n      {showStatsArray.map(category => (\r\n        category !== 'scl' && (\r\n          <StackedBarChart\r\n            key={`bar-chart-${category}`}\r\n            statCategory={category}\r\n          />\r\n        )\r\n      ))}\r\n    </>\r\n  )\r\n}","import { makeStyles } from '@material-ui/core';\r\nimport { nbaRed, nbaBlue } from '../../Util/Util';\r\n\r\nexport const useSeasonSelectStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 4,\r\n    '& .MuiFormLabel-root.Mui-focused': {\r\n      color: nbaRed,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline' : {\r\n      borderColor: nbaRed\r\n    }\r\n  }\r\n})","import React, { useContext } from 'react';\r\nimport { Select, FormControl, InputLabel, MenuItem } from '@material-ui/core'\r\nimport { settingsContext } from '../../Contexts/SettingsContext';\r\nimport { useSeasonSelectStyles } from './SeasonSelect.style'\r\n\r\n\r\nexport const SeasonSelect = () => {\r\n  const { selectedYear, setSelectedYear } = useContext(settingsContext);\r\n\r\n  const seasonSelectClasses = useSeasonSelectStyles();\r\n\r\n  const handleChange = ({ target }: React.ChangeEvent<{ value: unknown }>) => {\r\n    const { value } = target;\r\n    setSelectedYear(value as number);\r\n  };\r\n\r\n  return (\r\n    <FormControl\r\n      variant='outlined'\r\n      classes={seasonSelectClasses}\r\n    >\r\n      <InputLabel>Season</InputLabel>\r\n      <Select\r\n        value={selectedYear}\r\n        onChange={handleChange}\r\n        autoWidth\r\n      >\r\n        <MenuItem value={2020}>2020 - 2021</MenuItem>\r\n        <MenuItem value={2019}>2019 - 2020</MenuItem>\r\n        <MenuItem value={2018}>2018 - 2019</MenuItem>\r\n        <MenuItem value={2017}>2017 - 2018</MenuItem>\r\n        <MenuItem value={2016}>2016 - 2017</MenuItem>\r\n        <MenuItem value={2015}>2015 - 2016</MenuItem>\r\n        <MenuItem value={2014}>2014 - 2015</MenuItem>\r\n        <MenuItem value={2013}>2013 - 2014</MenuItem>\r\n        <MenuItem value={2012}>2012 - 2013</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AllPlayersContextProvider } from './Contexts/AllPlayersContext'\r\nimport { LeagueContextProvider } from './Contexts/LeagueContext'\r\nimport { SettingsContextProvider } from './Contexts/SettingsContext'\r\nimport { Grid } from '@material-ui/core';\r\nimport { AddTeamButton } from './components/AddTeamButton/AddTeamButton';\r\nimport { AllTeamsContainer } from './components/AllTeamsContainer/AllTeamsContainer';\r\nimport { useAppGridStyles } from './App.styles';\r\nimport { SettingsButton } from './components/SettingsButton/SettingsButton';\r\nimport { MultiplierButton } from './components/MultiplierButton/MultiplierButton';\r\nimport { Visualizations } from './components/Visualizations/Visualizations';\r\nimport { SeasonSelect } from './components/SeasonSelect/SeasonSelect';\r\n\r\nfunction App() {\r\n\r\n  const appGridClasses = useAppGridStyles();\r\n\r\n  const spacer = { width: 6 };\r\n\r\n  return (\r\n    <AllPlayersContextProvider>\r\n      <LeagueContextProvider>\r\n        <SettingsContextProvider>\r\n          <Grid\r\n            container\r\n            direction='column'\r\n            classes={appGridClasses}\r\n          >\r\n\r\n            {/* top 10% */}\r\n            <Grid\r\n              item\r\n              md={12}\r\n            >\r\n              <Grid\r\n                container\r\n                direction='row'\r\n                className='top-bar'\r\n                alignItems='center'\r\n                justify='space-between'\r\n              >\r\n                  <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-around'}}>\r\n                    <AddTeamButton />\r\n                    <span  style={spacer} />\r\n                    <SettingsButton />\r\n                    <span  style={spacer} />\r\n                    <MultiplierButton />\r\n                    <span  style={spacer} />\r\n                    <SeasonSelect />\r\n                  </div>\r\n                  <h1>LeagueMaps.com</h1>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* bottom 90% */}\r\n            <Grid\r\n              item\r\n              md={12}\r\n            >\r\n              <Grid\r\n                container\r\n                direction='row'\r\n              >\r\n\r\n                {/* left 25% */}\r\n                <Grid\r\n                  item\r\n                  md={3}\r\n                  style={{height: '90vh', overflowY: 'scroll'}}\r\n                  className='sidebar-scrollbar scrollbar-padding-top'\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction='column'\r\n                  >\r\n                      <AllTeamsContainer />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {/* right 75% */}\r\n                <Grid\r\n                  item\r\n                  md={9}\r\n                  style={{height: '90vh', overflowY: 'scroll'}}\r\n                  className='visualizations-container scrollbar-padding-top'\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction='column'\r\n                  >\r\n                    <Visualizations />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SettingsContextProvider>\r\n      </LeagueContextProvider>\r\n    </AllPlayersContextProvider>\r\n  );\r\n}\r\n\r\n// Did LeagueMaps help you win money in your fantasy league?\r\n// A modest $9 donation pays to keep LeagueMaps online for another 6 months...just in time for your draft next season\r\n\r\n// https://www.d3-graph-gallery.com/barplot.html\r\n// https://www.apollographql.com/blog/layering-graphql-on-top-of-rest-569c915083ad/\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}